作用：
文件字段，用来存放文件，返回文件对象

参数：
upload_to：设置文件存放的路径，用来保存文件，路径在media文件夹下
	   可以使用一个回调函数作为值，动态设置保存路径，必须接收两个参数

文件对象的属性与方法：
obj.url:文件的html路径,在html中可以通过此路径访问文件
obj.name:文件在media中的路径
obj.path:在系统中的路径

修改：
file为上传的新文件
obj.save(file.name , file , save=True)：第一个参数为新的文件名，第二个参数为上传的文件
save后，会根据新的文件保存，但是以前的文件任然存在
obj.delete(save=True)：删除字段值，并删除基础文件

例子：
普通设置
class MyModel(models.Model):
    # 文件被传至`MEDIA_ROOT/uploads`目录，MEDIA_ROOT由你在settings文件中设置
    upload = models.FileField(upload_to='uploads/')
    # 或者
    # 被传到`MEDIA_ROOT/uploads/2015/01/30`目录，增加了一个时间划分
    upload = models.FileField(upload_to='uploads/%Y/%m/%d/')
使用回调函数作为参数值
def user_directory_path(instance, filename):
    #文件上传到MEDIA_ROOT/user_<id>/<filename>目录中
    return 'user_{0}/{1}'.format(instance.user.id, filename)

class MyModel(models.Model):
    upload = models.FileField(upload_to=user_directory_path)

修改FileField字段
t = TestUpload.objects.first()
	if request.method == 'POST':
		form = TestUploadModelForm(instance = t , data = request.POST)
		file = request.FILES.get('file')
		if form.is_valid():
			# title = request.POST.get('title')
			# handle_upload_file(request.FILES['file'] , title)
			new_form = form.save(commit=False)
			new_form.file.delete(save=True)
			new_form.file.save(file.name , file , save=True)
			new_form.save()
			return redirect(reverse('test_upload'))


