queue能够保证线程安全，在多个线程同时使用一个变量时，能让多个线程按照规则进行，
不会影响变量的顺序

1.建立队列
3种模式：
先进先出模式：Queue，后进先出模式：LifoQueue，
优先级队列：PriorityQueue接受一个元组作为参数，根据元素大小排序
双线队列：deque使用append方法添加数据，appendleft在队列前端添加数据，
pop取出队列最后的数据，popleft方法取出队列最前的数据
设置队列长度：实例化时提供一个整数作为参数，设置队列长度，默认为无限长
q.maxsize查询队列长度，0表示无限长

2.往队列放置元素
阻塞：当队列满了以后，程序会卡在q.put()，直到数据被取走，如果设置了时间timeot
时间到了以后会抛出Full错误
非阻塞：block = False，队列满了直接抛出错误Full

3.取出元素
阻塞：当队列为空时，会一直等，知道带队列放入数据，如果设置了timeout，时间到了
以后会抛出Empty错误
非阻塞：当队列为空时，抛出Empty错误

4.错误
queue.Full队列满了再放入数据抛出
queue.Empty队列空了再取出抛出

q.full()队列是否满
q.empty()
q.qsize()当前队列的数据个数
q.task_done()显示指出任务完成，如果没有设置q.task_done()，设置了q.join()，则会一直阻塞q.join()，
如果q.task_done()的数量没有达到放入数据的总数量，怎会在q.join()出阻塞
q.join()所有任务完成后才会接触阻塞，否则将会卡在q.join()