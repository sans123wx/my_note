1.普通指针语法：
数据类型 *指针变量标识符 = 对象地址
例如：
int i= 10 , *p = &i;
指针变量的类型必须与赋值的对象的数据类型相同
&是取址符，获取对象的内容地址
指针变量其实只接受内存地址作为值
直接使用p，其值为内存地址
*为解引用符
*p(内存地址)得到指针对应的对象，直接输出*p结果为10
*p就相当于一个对象的引用，*p的值改变会改变对象和引用的值
p = 内存地址，会改变指针p指向的对象

2.空指针
设置指针的值为nullptr，表示为空指针
例如：int *p = nullptr;或int *p = 0;
空指针不指向任何对象，p为0，*p为空，
可以通过if（p）判断是否为空指针

3.void指针
void可以存放任何类型的指针
int i = 10;void *p = &i;
由于不知道指针类型，所以不能参与运算
void指针功能限制：
只能和别的指针作比较，作为函数输入和输出，或者赋给另一个void指针

4.指向指针的指针
由于指针自身是一个对象，所以可以有指针的指针
int i = 10,*p = &i; int **pp = &p;
pp的值，是p指针的内存地址，*pp是i的内存地址，**pp是i

5.指向指针的引用
int i = 10 , *p = &i;int *&r = p;
r和p都指向一个对象，只是名字不同，r的值是i内存地址，*r是对象i